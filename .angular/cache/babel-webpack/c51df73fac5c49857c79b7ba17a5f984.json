{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { globalConstant } from '../../utils/constant';\nimport * as i0 from \"@angular/core\";\nexport let ValidationControlService = /*#__PURE__*/(() => {\n  class ValidationControlService {\n    constructor() {\n      this.$invalidFormElement = new Subject();\n    }\n\n    $getInvalidComponent() {\n      return this.$invalidFormElement.asObservable();\n    }\n\n    set(data) {\n      if (globalConstant.FORM_VALIDATION.VALID === data.status) {\n        const states = {\n          state: true,\n          model: data.model\n        };\n        this._state = states;\n      } else {\n        const states = {\n          state: false,\n          model: data.model\n        };\n        this._state = states;\n      }\n\n      this.$invalidFormElement.next(this.get());\n    }\n\n    get() {\n      return this._state;\n    }\n\n  }\n\n  ValidationControlService.ɵfac = function ValidationControlService_Factory(t) {\n    return new (t || ValidationControlService)();\n  };\n\n  ValidationControlService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ValidationControlService,\n    factory: ValidationControlService.ɵfac,\n    providedIn: 'root'\n  });\n  return ValidationControlService;\n})();","map":null,"metadata":{},"sourceType":"module"}