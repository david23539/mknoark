{"ast":null,"code":"import { ApplicationRef, ComponentFactory, ComponentFactoryResolver, ComponentRef, EmbeddedViewRef, Injector } from '@angular/core';\nimport { timer } from 'rxjs';\nimport { SpinnerLoaderComponent } from './spinner-loader/spinner-loader.component';\nimport * as i0 from \"@angular/core\";\nexport let SpinnerLoaderService = /*#__PURE__*/(() => {\n  class SpinnerLoaderService {\n    constructor(_componentFactoryResolver, _appRef, _injector) {\n      this._componentFactoryResolver = _componentFactoryResolver;\n      this._appRef = _appRef;\n      this._injector = _injector;\n    }\n\n    static _getRootNode(refComponent) {\n      return refComponent.hostView.rootNodes[0];\n    }\n\n    showSpinner(urlLogo, text) {\n      if (!this._cntSpinner) {\n        this._cntSpinner = this._componentFactoryResolver.resolveComponentFactory(SpinnerLoaderComponent);\n        this._cntSpinnerRef = this._cntSpinner.create(this._injector);\n\n        this._appRef.attachView(this._cntSpinnerRef.hostView);\n\n        this._appRef.components[0].location.nativeElement.appendChild(SpinnerLoaderService._getRootNode(this._cntSpinnerRef));\n\n        if (urlLogo) {\n          this._cntSpinnerRef.instance.urlLogo = urlLogo;\n        }\n\n        this._cntSpinnerRef.instance.textLoading = text;\n      } else {\n        if (urlLogo) {\n          this._cntSpinnerRef.instance.urlLogo = urlLogo;\n        }\n\n        this._cntSpinnerRef.instance.textLoading = text;\n      }\n    }\n\n    closeSpinner() {\n      if (this._cntSpinnerRef && this._appRef) {\n        this._cntSpinnerRef.instance.close = true;\n        timer(300).subscribe(() => {\n          this._appRef.detachView(this._cntSpinnerRef.hostView);\n\n          this._cntSpinner = null;\n          this._cntSpinnerRef = null;\n        });\n      }\n    }\n\n  }\n\n  SpinnerLoaderService.ɵfac = function SpinnerLoaderService_Factory(t) {\n    return new (t || SpinnerLoaderService)(i0.ɵɵinject(i0.ComponentFactoryResolver), i0.ɵɵinject(i0.ApplicationRef), i0.ɵɵinject(i0.Injector));\n  };\n\n  SpinnerLoaderService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SpinnerLoaderService,\n    factory: SpinnerLoaderService.ɵfac,\n    providedIn: 'root'\n  });\n  return SpinnerLoaderService;\n})();","map":null,"metadata":{},"sourceType":"module"}