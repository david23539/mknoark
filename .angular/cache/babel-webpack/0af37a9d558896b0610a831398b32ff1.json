{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { NG_ASYNC_VALIDATORS, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgModel } from '@angular/forms';\nimport { filter } from 'rxjs/operators';\nimport { CookiesService } from '../../../service/cookies/cookies.service';\nimport { globalConstant } from '../../../utils/constant';\nimport { ElementBase } from '../../element-base';\nimport { ValidationControlService } from '../../service/validation-control.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/validation-control.service\";\nimport * as i2 from \"../../../service/cookies/cookies.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../../validation-form/validation-message/validation-message.component\";\nconst _c0 = [\"textLabel\"];\n\nfunction InputFormComponent_label_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 3, 4);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"for\", ctx_r0.identifier)(\"ngClass\", ctx_r0.value ? \"active\" : \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.label, \" \");\n  }\n}\n\nfunction InputFormComponent_nk_validation_message_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nk-validation-message\", 5);\n    i0.ɵɵpipe(1, \"async\");\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"messages\", i0.ɵɵpipeBind1(1, 1, ctx_r1.failures));\n  }\n}\n\nconst _c1 = function (a0) {\n  return {\n    invalid: a0\n  };\n};\n\nlet identifier = 0;\nexport let InputFormComponent = /*#__PURE__*/(() => {\n  class InputFormComponent extends ElementBase {\n    constructor(validators, asyncValidators, _validationService, _cookieService) {\n      super(validators, asyncValidators);\n      this._validationService = _validationService;\n      this._cookieService = _cookieService;\n      this.identifier = `form-text-${identifier++}`;\n    }\n\n    ngOnInit() {\n      if (this.model.model) {\n        this.textLabel.nativeElement.className = globalConstant.FORMS_STYLES.ACTIVE;\n      }\n\n      this.model.statusChanges.pipe(filter(status => this._statusValidation !== status)).subscribe(status => {\n        this._statusValidation = status;\n        const states = {\n          status,\n          model: this.model\n        };\n\n        this._validationService.set(states);\n      });\n    }\n\n  }\n\n  InputFormComponent.ɵfac = function InputFormComponent_Factory(t) {\n    return new (t || InputFormComponent)(i0.ɵɵdirectiveInject(NG_VALIDATORS, 8), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 8), i0.ɵɵdirectiveInject(i1.ValidationControlService), i0.ɵɵdirectiveInject(i2.CookiesService));\n  };\n\n  InputFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InputFormComponent,\n    selectors: [[\"nk-input-form\"]],\n    viewQuery: function InputFormComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(NgModel, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textLabel = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.model = _t.first);\n      }\n    },\n    inputs: {\n      label: \"label\",\n      type: \"type\",\n      name: \"name\",\n      autoComplete: \"autoComplete\",\n      min: \"min\",\n      max: \"max\",\n      readonly: \"readonly\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: InputFormComponent,\n      multi: true\n    }, CookiesService]), i0.ɵɵInheritDefinitionFeature],\n    decls: 6,\n    vars: 17,\n    consts: [[3, \"ngModel\", \"ngClass\", \"autocomplete\", \"id\", \"name\", \"min\", \"max\", \"readOnly\", \"ngModelChange\"], [3, \"for\", \"ngClass\", 4, \"ngIf\"], [3, \"messages\", 4, \"ngIf\"], [3, \"for\", \"ngClass\"], [\"textLabel\", \"\"], [3, \"messages\"]],\n    template: function InputFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelementStart(1, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function InputFormComponent_Template_input_ngModelChange_1_listener($event) {\n          return ctx.value = $event;\n        });\n        i0.ɵɵpipe(2, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, InputFormComponent_label_3_Template, 3, 3, \"label\", 1);\n        i0.ɵɵtemplate(4, InputFormComponent_nk_validation_message_4_Template, 2, 3, \"nk-validation-message\", 2);\n        i0.ɵɵpipe(5, \"async\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.value)(\"ngClass\", i0.ɵɵpureFunction1(15, _c1, i0.ɵɵpipeBind1(2, 11, ctx.invalid)))(\"autocomplete\", ctx.autoComplete)(\"id\", ctx.identifier)(\"name\", ctx.name)(\"min\", ctx.min)(\"max\", ctx.max)(\"readOnly\", ctx.readonly);\n        i0.ɵɵattribute(\"type\", ctx.type);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.label);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(5, 13, ctx.invalid));\n      }\n    },\n    directives: [i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.NgClass, i4.NgIf, i5.ValidationMessageComponent],\n    pipes: [i4.AsyncPipe],\n    styles: [\"@-webkit-keyframes underline{0%{width:0}to{width:100%}}@keyframes underline{0%{width:0}to{width:100%}}@-webkit-keyframes menuSlider{0%{opacity:0;margin-top:-10%}to{opacity:1;margin-top:0}}@keyframes menuSlider{0%{opacity:0;margin-top:-10%}to{opacity:1;margin-top:0}}@-webkit-keyframes spanMenuSlider{0%{opacity:0}to{display:inline;opacity:1}}@keyframes spanMenuSlider{0%{opacity:0}to{display:inline;opacity:1}}@-webkit-keyframes checkedDefaultOut{0%{opacity:1.1;height:10px;width:10px}50%{opacity:.5;transform:scale(.9)}to{opacity:1;transform:scale(1.9);top:25%;left:0}}@keyframes checkedDefaultOut{0%{opacity:1.1;height:10px;width:10px}50%{opacity:.5;transform:scale(.9)}to{opacity:1;transform:scale(1.9);top:25%;left:0}}@-webkit-keyframes bounceHorizontal{0%{transform:translate(-19vw)}10%{transform:translate(80vw)}20%{transform:translate(60vw)}50%{transform:translate(99vw)}60%{transform:translate(0)}70%{transform:translate(20vw)}to{transform:translate(-19vw)}}@keyframes bounceHorizontal{0%{transform:translate(-19vw)}10%{transform:translate(80vw)}20%{transform:translate(60vw)}50%{transform:translate(99vw)}60%{transform:translate(0)}70%{transform:translate(20vw)}to{transform:translate(-19vw)}}@-webkit-keyframes blur{0%{opacity:1}50%{opacity:.5}to{opacity:0}}@keyframes blur{0%{opacity:1}50%{opacity:.5}to{opacity:0}}@-webkit-keyframes toastLine{0%{opacity:0;left:20vw}20%{opacity:1;left:0}50%{opacity:1;left:0;bottom:0}80%{opacity:.5;bottom:70vh}to{opacity:0;bottom:100vh}}@keyframes toastLine{0%{opacity:0;left:20vw}20%{opacity:1;left:0}50%{opacity:1;left:0;bottom:0}80%{opacity:.5;bottom:70vh}to{opacity:0;bottom:100vh}}@-webkit-keyframes closeToast{0%{opacity:1;bottom:0}to{opacity:0;bottom:50vh}}@keyframes closeToast{0%{opacity:1;bottom:0}to{opacity:0;bottom:50vh}}@-webkit-keyframes closeCookie{0%{opacity:1}to{opacity:0}}@keyframes closeCookie{0%{opacity:1}to{opacity:0}}@-webkit-keyframes rotateSpinner{0%{transform:rotate(0)}to{transform:rotate(360deg)}}@keyframes rotateSpinner{0%{transform:rotate(0)}to{transform:rotate(360deg)}}div[_ngcontent-%COMP%]{position:relative;background:transparent;padding-top:10px;margin:.5rem 0}div[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{border:none;border-radius:0;position:relative;border-bottom:1px solid #999999;outline:none;padding-left:12px;transition:all .25s;width:100%}div[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus{box-shadow:0 1px 0 var(--primary-color);border-bottom:1px solid var(--primary-color)}div[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus + label[_ngcontent-%COMP%]{top:-4px;left:0;color:var(--primary-color);transform:scale(.8)}div[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{cursor:text;position:absolute;transition:all .25s;left:12px;overflow:hidden;right:2rem;text-overflow:ellipsis;top:10px;white-space:nowrap;z-index:1}.active[_ngcontent-%COMP%]{top:-4px!important;left:0!important;right:0!important;color:var(--primary-color);transform:scale(.8)}.invalid[_ngcontent-%COMP%]{box-shadow:0 1px #d32f2f!important;border-bottom:1px solid #d32f2f!important}.invalid[_ngcontent-%COMP%] + label[_ngcontent-%COMP%]{color:#d32f2f!important}.ng-valid.ng-touched[_ngcontent-%COMP%]{box-shadow:0 1px #388e3c;border-bottom:1px solid #388e3c}.ng-valid.ng-touched[_ngcontent-%COMP%] + label[_ngcontent-%COMP%]{color:#388e3c}\"]\n  });\n  return InputFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}