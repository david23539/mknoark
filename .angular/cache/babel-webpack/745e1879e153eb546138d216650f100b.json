{"ast":null,"code":"import { ElementRef, Renderer2 } from '@angular/core';\nimport { globalConstant } from '../../utils/constant';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"button\"];\nconst _c1 = [\"*\"];\nexport let ButtonDefaultComponent = /*#__PURE__*/(() => {\n  class ButtonDefaultComponent {\n    constructor(rendered) {\n      this.rendered = rendered;\n    }\n    /**\r\n     * Propiedad que indica que el componente esta esperando respuesta\r\n     */\n\n\n    set isLoading(value) {\n      this._isLoading = value;\n\n      if (this.button) {\n        this.setLoadingButton();\n      }\n    }\n\n    get isLoading() {\n      return this._isLoading;\n    }\n\n    set typeButton(value) {\n      this.type = value;\n\n      if (this.button) {\n        this.setStyleButton(this.typeButton);\n      }\n    }\n\n    get typeButton() {\n      return this.type;\n    }\n\n    ngAfterViewInit() {\n      if (this.float) {\n        this.rendered.addClass(this.button.nativeElement, globalConstant.COLOR_TYPES.FLOAT);\n        this.setLoadingButton();\n      }\n\n      this.setStyleButton(this.typeButton);\n      this.setLoadingButton();\n    }\n\n    setLoadingButton() {\n      if (this.isLoading === true) {\n        this.rendered.setAttribute(this.button.nativeElement, globalConstant.COLOR_TYPES.DISABLED, null);\n\n        if (this.typeButton !== globalConstant.COLOR_TYPES.DISABLED) {\n          this.rendered.addClass(this.button.nativeElement, globalConstant.COLOR_TYPES.LOADING);\n        }\n      } else if (this.isLoading === false && this.typeButton !== globalConstant.COLOR_TYPES.DISABLED) {\n        this.rendered.removeAttribute(this.button.nativeElement, globalConstant.COLOR_TYPES.DISABLED);\n        this.rendered.removeClass(this.button.nativeElement, globalConstant.COLOR_TYPES.LOADING);\n      }\n    }\n\n    setStyleButton(style) {\n      switch (style) {\n        case globalConstant.COLOR_TYPES.SUCCESS:\n          this.resetStyleButton();\n          this.rendered.addClass(this.button.nativeElement, globalConstant.COLOR_TYPES.SUCCESS);\n          break;\n\n        case globalConstant.COLOR_TYPES.WARNING:\n          this.resetStyleButton();\n          this.rendered.addClass(this.button.nativeElement, globalConstant.COLOR_TYPES.WARNING);\n          break;\n\n        case globalConstant.COLOR_TYPES.DANGER:\n          this.resetStyleButton();\n          this.rendered.addClass(this.button.nativeElement, globalConstant.COLOR_TYPES.DANGER);\n          break;\n\n        case globalConstant.COLOR_TYPES.DEFAULT:\n          this.resetStyleButton();\n          this.rendered.addClass(this.button.nativeElement, globalConstant.COLOR_TYPES.DEFAULT);\n          break;\n\n        case globalConstant.COLOR_TYPES.INFO:\n          this.resetStyleButton();\n          this.rendered.addClass(this.button.nativeElement, globalConstant.COLOR_TYPES.INFO);\n          break;\n\n        case globalConstant.COLOR_TYPES.DISABLED:\n          this.resetStyleButton();\n          this.rendered.setAttribute(this.button.nativeElement, globalConstant.COLOR_TYPES.DISABLED, null);\n          this.rendered.addClass(this.button.nativeElement, globalConstant.COLOR_TYPES.DISABLED);\n          break;\n\n        default:\n          break;\n      }\n\n      if (this.noShadow) {\n        this.rendered.addClass(this.button.nativeElement, globalConstant.COLOR_TYPES.NO_SHADOW);\n        this.setLoadingButton();\n      }\n\n      this.setLoadingButton();\n    }\n\n    resetStyleButton() {\n      this.button.nativeElement.className = globalConstant.GENERAL.EMPTY_STRING;\n      this.rendered.removeAttribute(this.button.nativeElement, globalConstant.COLOR_TYPES.DISABLED);\n    }\n\n  }\n\n  ButtonDefaultComponent.ɵfac = function ButtonDefaultComponent_Factory(t) {\n    return new (t || ButtonDefaultComponent)(i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n\n  ButtonDefaultComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ButtonDefaultComponent,\n    selectors: [[\"nk-button-default\"]],\n    viewQuery: function ButtonDefaultComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.button = _t.first);\n      }\n    },\n    inputs: {\n      noShadow: \"noShadow\",\n      float: \"float\",\n      isLoading: \"isLoading\",\n      typeButton: \"typeButton\"\n    },\n    ngContentSelectors: _c1,\n    decls: 3,\n    vars: 0,\n    consts: [[\"button\", \"\"]],\n    template: function ButtonDefaultComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"button\", null, 0);\n        i0.ɵɵprojection(2);\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"button[_ngcontent-%COMP%]{margin-top:.5rem;width:100%;border:none;position:relative;padding:.5rem;background:var(--primary-color);color:#fff;cursor:pointer;box-shadow:0 4px 20px #00000024,0 7px 12px -5px var(--primary-color);text-align:center;transition-duration:.4s;text-decoration:none;overflow:hidden}button[_ngcontent-%COMP%]:hover{box-shadow:0 4px 20px #00000024,0 7px 12px 0 var(--primary-color)}button[_ngcontent-%COMP%]:active{opacity:.8}button[_ngcontent-%COMP%]:focus{outline:none}button[_ngcontent-%COMP%]:after{content:\\\"\\\";background:var(--secundary-color);position:absolute;height:50px;left:50%;top:20%;opacity:0;transform:scale(6);width:50px;border-radius:50%;transition:all .8s}button[_ngcontent-%COMP%]:active:after{transform:scale(0);opacity:1;transition:0s}.float[_ngcontent-%COMP%]{position:absolute;bottom:1vh;right:1vw;border-radius:50%;height:60px;width:60px;border:none;color:#fff}.info[_ngcontent-%COMP%]{background:#0d47a1;box-shadow:0 4px 20px #00000024,0 7px 12px -5px #0d47a1}.info[_ngcontent-%COMP%]:hover{box-shadow:0 4px 20px #00000024,0 7px 12px #0d47a1}.info[_ngcontent-%COMP%]:after{background:#42a5f5}.success[_ngcontent-%COMP%]{background:#4caf50;box-shadow:0 4px 20px #00000024,0 7px 12px -5px #4caf50}.success[_ngcontent-%COMP%]:hover{box-shadow:0 4px 20px #00000024,0 7px 12px #4caf50}.success[_ngcontent-%COMP%]:after{background:#a5d6a7}.warning[_ngcontent-%COMP%]{background:#fbc02d;box-shadow:0 4px 20px #00000024,0 7px 12px -5px #fbc02d}.warning[_ngcontent-%COMP%]:hover{box-shadow:0 4px 20px #00000024,0 7px 12px #fbc02d}.warning[_ngcontent-%COMP%]:after{background:#ffeb3b}.danger[_ngcontent-%COMP%]{background:#d32f2f;box-shadow:0 4px 20px #00000024,0 7px 12px -5px #d32f2f}.danger[_ngcontent-%COMP%]:hover{box-shadow:0 4px 20px #00000024,0 7px 12px #d32f2f}.danger[_ngcontent-%COMP%]:after{background:#f44336}.default[_ngcontent-%COMP%]{background:#ffffff;color:var(--primary-color)}.default[_ngcontent-%COMP%]:after{background:#bdbdbd}.disabled[_ngcontent-%COMP%]{background:#bdbdbd;pointer-events:none;box-shadow:0 4px 20px #00000024,0 7px 12px -5px #fff}.disabled[_ngcontent-%COMP%]:hover{box-shadow:0 4px 20px #00000024,0 7px 12px -5px #fff}.disabled[_ngcontent-%COMP%]:after{background:#bdbdbd}.no-shadow[_ngcontent-%COMP%], .no-shadow[_ngcontent-%COMP%]:hover{box-shadow:none}.isLoading[_ngcontent-%COMP%]{opacity:.7;pointer-events:none}\"],\n    changeDetection: 0\n  });\n  return ButtonDefaultComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}